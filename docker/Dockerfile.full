# Stage 1: Use a minimal base image with Node.js
## Goreleaser requires the "--platform" to handle multi-platform builds
# hadolint ignore=DL3029
FROM --platform=${BUILDPLATFORM} node:current-slim AS node

# Stage 2: Use Rust official image
## Goreleaser requires the "--platform" to handle multi-platform builds
# hadolint ignore=DL3029
FROM --platform=${BUILDPLATFORM} rust:latest AS rust

# Final Stage: Combine both tools
## Goreleaser requires the "--platform" to handle multi-platform builds
# hadolint ignore=DL3029
FROM --platform=${BUILDPLATFORM} debian:stable-slim

LABEL maintainer="Olivier Vernin <me@olblak.com>, Damien DUPORTAL <damien.duportal@gmail.com>"

# Dynamic labels are defined from the goreleaser configuration ".goreleaser.yaml"
LABEL org.opencontainers.image.authors="Olivier Vernin<me@olblak.com>, Damien DUPORTAL <damien.duportal@gmail.com>"
LABEL org.opencontainers.image.url="https://github.com/updatecli/updatecli/pkgs/container/updatecli"
LABEL org.opencontainers.image.documentation="https://www.updatecli.io/docs/prologue/introduction/"
LABEL org.opencontainers.image.licenses="Apache-2.0"
LABEL org.opencontainers.image.title="Updatecli"
LABEL org.opencontainers.image.description="The gitops automation engine"
LABEL org.opencontainers.image.base.name="ghcr.io/updatecli/updatecli"
LABEL org.opencontainers.image.source https://github.com/updatecli/updatecli

# /tmp is used by updatecli to store git repository so it's better
# to define a volume
VOLUME /tmp

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive

# Install basic dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        ca-certificates \
        curl \
        tag \
        unzip \
        wget \
        git \
        build-essential \
        # Node.js dependencies
        libssl-dev \
        # Rust required tools
        pkg-config \
        && rm -rf /var/lib/apt/lists/*

# Copy Node.js from the node image
COPY --from=node /usr/local/ /usr/local/

# Copy Rust toolchain from rust image
COPY --from=rust /usr/local/cargo /usr/local/cargo
COPY --from=rust /usr/local/rustup /usr/local/rustup
COPY --from=rust /usr/local/lib/rustlib /usr/local/lib/rustlib
COPY --from=rust /usr/local/bin/rustc /usr/local/bin/rustc
COPY --from=rust /usr/local/bin/cargo /usr/local/bin/cargo
COPY --from=rust /usr/local/bin/rustup /usr/local/bin/rustup

# Available files only matched against the binaries generated by the builds section
# and packages generated by the nfpms section.
COPY updatecli  /usr/local/bin/updatecli

# Add cargo and npm to PATH
ENV PATH="/usr/local/cargo/bin:/usr/local/bin:$PATH"

# Install cargo-edit
RUN cargo install cargo-edit

# Confirm versions (optional)
RUN node -v && npm -v && cargo --version

RUN useradd -d /home/updatecli -U -u 1000 -m updatecli

USER updatecli

WORKDIR /home/updatecli

ENTRYPOINT [ "/usr/local/bin/updatecli" ]
CMD ["help"]
